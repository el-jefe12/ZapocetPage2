@page
@model TexasGuyContractIdentity.Pages.ConfigModel
@{
    ViewData["Title"] = "Config";
}

<h1>@ViewData["Title"]</h1>

<hr>

<h3>Email Test</h3>
<p>Here you can try how a message sent to an email might look like.</p>
<p>Papercut was used as an smtp server, it's local so i'm not sure how this will actually work when used with a real smpt buit ehjhh</p>

@if (TempData["Message"] != null)
{
    <div class="alert alert-success">@TempData["Message"]</div>
}

<form method="post">
    <div class="form-group">
        <label for="email">Email Address:</label>
        <input type="email" id="email" name="Email" class="form-control" required />
    </div>
    <div class="form-group mt-3">
        <label for="subject">Subject:</label>
        <input type="text" id="subject" name="Subject" class="form-control" required />
    </div>
    <div class="form-group mt-3">
        <label for="body">Body:</label>
        <textarea id="body" name="Body" class="form-control" rows="5" required></textarea>
    </div>
    <button class="btn btn-primary mt-4" type="submit">Send Email</button>
</form>

<hr>

<h3>Token Generation</h3>
<p>Click the button below to generate a token.</p>

<div class="mt-4">
    <button id="generateTokenButton" class="btn btn-secondary">Generate Token</button>
    <div class="mt-3">
        <label for="generatedToken">Generated Token:</label>
        <input type="text" id="generatedToken" class="form-control" readonly />
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('generateTokenButton').addEventListener('click', function () {
            var token = generateToken();
            document.getElementById('generatedToken').value = token;
        });

        function generateToken() {
            var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
            var token = '';
            for (var i = 0; i < 16; i++) {
                token += characters.charAt(Math.floor(Math.random() * characters.length));
            }
            return token;
        }
    </script>
}
