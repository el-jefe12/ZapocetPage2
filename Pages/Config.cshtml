@page
@model TexasGuyContractIdentity.Pages.ConfigModel
@{
    ViewData["Title"] = "Config";
}

<h1>@ViewData["Title"]</h1>

<hr>

<h3>Email Test</h3>
<p>Here you can try how a message sent to an email might look like.</p>
<p>Papercut was used as an SMTP server; it's local, so its behavior with a real SMTP might differ.</p>

@if (TempData["Message"] != null)
{
    <div class="alert alert-success">@TempData["Message"]</div>
}

<hr>
<div class="station-list-container">
<form method="post" asp-page-handler="SendTestMail">
    <div class="form-group">
        <label for="email">Email Address:</label>
        <input type="email" id="email" asp-for="EmailForm.Email" class="form-control" required />
    </div>
    <div class="form-group mt-3">
        <label for="subject">Subject:</label>
        <input type="text" id="subject" asp-for="EmailForm.Subject" class="form-control" required />
    </div>
    <div class="form-group mt-3">
        <label for="body">Body:</label>
        <textarea id="body" asp-for="EmailForm.Body" class="form-control" rows="5" required></textarea>
    </div>
    <button class="btn btn-primary mt-4" type="submit">Send Email</button>
</form>

<hr />

<h3>Add SMTP</h3>
<p>Here you can add your own SMTP configuration. This should resolve errors that occur when someone tries registering or when a station tries to send a report.</p>

<form method="post" asp-page-handler="AddSmtp">
    <div class="form-group">
        <label for="smtp_name">Name:</label>
        <input type="text" id="smtp_name" asp-for="SmtpForm.Name" class="form-control" required />
    </div>
    <div class="form-group mt-3">
        <label for="smtp_port">Port:</label>
        <input type="text" id="smtp_port" asp-for="SmtpForm.Port" class="form-control" required />
    </div>
    <button class="btn btn-primary mt-4" type="submit">Add</button>
</form>

<hr />

<h3>Select SMTP</h3>
<p>If you already have an SMTP configuration, you can select it here.</p>

<form method="post" asp-page-handler="SelectSmtp">
    <div class="form-group">
        <label for="smtp_select">Select SMTP:</label>
        <select id="smtp_select" asp-for="SmtpSelection.SelectedSmtpId" class="form-control">
            @if (Model.SmtpList != null)
            {
                @foreach (var smtp in Model.SmtpList)
                {
                    <option value="@smtp.Id" selected="@(smtp.is_active ? "selected" : null)">@smtp.Name</option>
                }
            }
        </select>
    </div>
    <button class="btn btn-primary mt-4" type="submit">Change</button>
</form>

<hr />

<h3>Generate API Token</h3>
<p>Click the button below to generate a new API token.</p>

<form method="post" asp-page-handler="GenerateToken">
    <button class="btn btn-primary mt-4" type="submit">Generate Token</button>
</form>

<hr />

<h3>API Tokens</h3>
<p>Here are your generated API tokens.</p>

@if (Model.ApiTokens != null)
{
    <ul>
        @foreach (var token in Model.ApiTokens)
        {
            <li>@token.Token - @token.CreatedAt.ToString("g") - @(token.ExpiresAt.HasValue ? token.ExpiresAt.Value.ToString("g") : "No Expiry")</li>
        }
    </ul>
}
</div>
<hr>

<style>
    /* Scrollable container styling */
    .station-list-container {
        max-height: 60%; /* Adjust height as needed */
        overflow-y: auto;
    }
</style>